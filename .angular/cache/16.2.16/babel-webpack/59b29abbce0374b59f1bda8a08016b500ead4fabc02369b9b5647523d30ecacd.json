{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction DashboardComponent__svg_ng_container_10__svg_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"path\", 12);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const i_r2 = i0.ɵɵnextContext().index;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"d\", ctx_r3.trips[i_r2] == null ? null : ctx_r3.trips[i_r2].d);\n  }\n}\nfunction DashboardComponent__svg_ng_container_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"g\");\n    i0.ɵɵtemplate(2, DashboardComponent__svg_ng_container_10__svg_ng_container_2_Template, 2, 1, \"ng-container\", 9);\n    i0.ɵɵelement(3, \"circle\", 10);\n    i0.ɵɵelementStart(4, \"text\", 11);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const trip_r1 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"transform\", \"translate(\" + (50 + i_r2 * 150) + \",\" + (trip_r1.level === 2 ? 60 : 120) + \")\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.trips.length > 1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"fill\", trip_r1.color);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"\", trip_r1.shortStart, \" - \", trip_r1.shortEnd, \"\");\n  }\n}\nexport class DashboardComponent {\n  constructor() {\n    this.startPoint = '';\n    this.endPoint = '';\n    this.trips = [];\n  }\n  addTrip() {\n    const shortStart = this.startPoint.trim().substring(0, 3).toUpperCase();\n    const shortEnd = this.endPoint.trim().substring(0, 3).toUpperCase();\n    const newTrip = {\n      start: this.startPoint.trim(),\n      end: this.endPoint.trim(),\n      level: 1,\n      continued: false,\n      sameRoute: false,\n      arrow: false,\n      shortStart,\n      shortEnd,\n      color: '#5c6bc0',\n      d: \"M0 0 C 0 0, 0 0, 0 0\"\n    };\n    const lastTrip = this.trips[this.trips.length - 1];\n    if (lastTrip) {\n      // Check if current trip continues from previous\n      newTrip.continued = lastTrip.end === newTrip.start;\n      // Check if consecutive same route\n      newTrip.sameRoute = lastTrip.start === newTrip.start && lastTrip.end === newTrip.end;\n      if (newTrip.sameRoute) {\n        lastTrip.level = 2;\n        // newTrip.d = 'M0 0 C 50 15, 100 -80, 150 -55'\n        lastTrip.d = 'M0 0 C 0 0, 0 0, 150 0';\n        newTrip.level = 2;\n        newTrip.color = '#ffb74d';\n      } else if (newTrip.continued) {\n        newTrip.color = '#ffb74d';\n        lastTrip.d = \"M0 0 C 0 0, 0 0, 150 0\";\n      } else {\n        newTrip.color = '#2196f3';\n        newTrip.arrow = false;\n      }\n    }\n    this.trips.push(newTrip);\n    this.startPoint = '';\n    this.endPoint = '';\n    console.log(this.trips);\n  }\n  static {\n    this.ɵfac = function DashboardComponent_Factory(t) {\n      return new (t || DashboardComponent)();\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: DashboardComponent,\n      selectors: [[\"app-dashboard\"]],\n      decls: 11,\n      vars: 3,\n      consts: [[1, \"form-container\"], [\"placeholder\", \"Start Point\", 3, \"ngModel\", \"ngModelChange\"], [\"placeholder\", \"End Point\", 3, \"ngModel\", \"ngModelChange\"], [3, \"click\"], [1, \"timeline\"], [\"width\", \"100%\", \"height\", \"200\"], [\"id\", \"arrow\", \"markerWidth\", \"10\", \"markerHeight\", \"7\", \"refX\", \"10\", \"refY\", \"3.5\", \"orient\", \"auto\"], [\"points\", \"0 0, 10 3.5, 0 7\", \"fill\", \"#2196f3\"], [4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [\"r\", \"5\"], [\"x\", \"-15\", \"y\", \"20\", \"font-size\", \"12\"], [\"stroke\", \"#ffb74d\", \"stroke-width\", \"2\", \"marker-end\", \"\"]],\n      template: function DashboardComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"input\", 1);\n          i0.ɵɵlistener(\"ngModelChange\", function DashboardComponent_Template_input_ngModelChange_1_listener($event) {\n            return ctx.startPoint = $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"input\", 2);\n          i0.ɵɵlistener(\"ngModelChange\", function DashboardComponent_Template_input_ngModelChange_2_listener($event) {\n            return ctx.endPoint = $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"button\", 3);\n          i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_3_listener() {\n            return ctx.addTrip();\n          });\n          i0.ɵɵtext(4, \"Add Trip\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(5, \"div\", 4);\n          i0.ɵɵnamespaceSVG();\n          i0.ɵɵelementStart(6, \"svg\", 5)(7, \"defs\")(8, \"marker\", 6);\n          i0.ɵɵelement(9, \"polygon\", 7);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(10, DashboardComponent__svg_ng_container_10_Template, 6, 5, \"ng-container\", 8);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngModel\", ctx.startPoint);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngModel\", ctx.endPoint);\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"ngForOf\", ctx.trips);\n        }\n      },\n      dependencies: [i1.NgForOf, i1.NgIf, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgModel],\n      styles: [\".form-container[_ngcontent-%COMP%] {\\n  margin-bottom: 20px;\\n}\\ninput[_ngcontent-%COMP%] {\\n  margin-right: 10px;\\n  padding: 5px;\\n}\\n.timeline[_ngcontent-%COMP%] {\\n  margin-top: 20px;\\n  overflow-x: auto;\\n  white-space: nowrap;\\n  padding: 10px;\\n  background-color: #f5f5f5;\\n  border: 1px solid #ddd;\\n  border-radius: 5px;\\n}\\nsvg[_ngcontent-%COMP%] {\\n  width: 100%;\\n  height: 200px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsbUJBQW1CO0FBQ3JCO0FBQ0E7RUFDRSxrQkFBa0I7RUFDbEIsWUFBWTtBQUNkO0FBQ0E7RUFDRSxnQkFBZ0I7RUFDaEIsZ0JBQWdCO0VBQ2hCLG1CQUFtQjtFQUNuQixhQUFhO0VBQ2IseUJBQXlCO0VBQ3pCLHNCQUFzQjtFQUN0QixrQkFBa0I7QUFDcEI7QUFDQTtFQUNFLFdBQVc7RUFDWCxhQUFhO0FBQ2YiLCJzb3VyY2VzQ29udGVudCI6WyIuZm9ybS1jb250YWluZXIge1xyXG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XHJcbn1cclxuaW5wdXQge1xyXG4gIG1hcmdpbi1yaWdodDogMTBweDtcclxuICBwYWRkaW5nOiA1cHg7XHJcbn1cclxuLnRpbWVsaW5lIHtcclxuICBtYXJnaW4tdG9wOiAyMHB4O1xyXG4gIG92ZXJmbG93LXg6IGF1dG87XHJcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcclxuICBwYWRkaW5nOiAxMHB4O1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNmNWY1ZjU7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgI2RkZDtcclxuICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbn1cclxuc3ZnIHtcclxuICB3aWR0aDogMTAwJTtcclxuICBoZWlnaHQ6IDIwMHB4O1xyXG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["i0","ɵɵelementContainerStart","ɵɵelement","ɵɵelementContainerEnd","ɵɵadvance","ɵɵattribute","ctx_r3","trips","i_r2","d","ɵɵelementStart","ɵɵtemplate","DashboardComponent__svg_ng_container_10__svg_ng_container_2_Template","ɵɵtext","ɵɵelementEnd","trip_r1","level","ɵɵproperty","ctx_r0","length","color","ɵɵtextInterpolate2","shortStart","shortEnd","DashboardComponent","constructor","startPoint","endPoint","addTrip","trim","substring","toUpperCase","newTrip","start","end","continued","sameRoute","arrow","lastTrip","push","console","log","selectors","decls","vars","consts","template","DashboardComponent_Template","rf","ctx","ɵɵlistener","DashboardComponent_Template_input_ngModelChange_1_listener","$event","DashboardComponent_Template_input_ngModelChange_2_listener","DashboardComponent_Template_button_click_3_listener","ɵɵnamespaceSVG","DashboardComponent__svg_ng_container_10_Template"],"sources":["C:\\Users\\Sharbanee Mohanty\\Downloads\\coforge4\\projectnew\\src\\app\\dashboard\\dashboard.component.ts","C:\\Users\\Sharbanee Mohanty\\Downloads\\coforge4\\projectnew\\src\\app\\dashboard\\dashboard.component.html"],"sourcesContent":["import { Component } from '@angular/core';\n\ninterface TripSegment {\n  start: string;\n  end: string;\n  level: number;\n  continued: boolean;\n  sameRoute: boolean;\n  arrow: boolean;\n  shortStart: string;\n  shortEnd: string;\n  color: string;\n  d: string;\n}\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent {\n  startPoint = '';\n  endPoint = '';\n  trips: TripSegment[] = [];\n\n  addTrip() {\n    const shortStart = this.startPoint.trim().substring(0, 3).toUpperCase();\n    const shortEnd = this.endPoint.trim().substring(0, 3).toUpperCase();\n\n    const newTrip: TripSegment = {\n      start: this.startPoint.trim(),\n      end: this.endPoint.trim(),\n      level: 1,\n      continued: false,\n      sameRoute: false,\n      arrow: false,\n      shortStart,\n      shortEnd,\n      color: '#5c6bc0',\n      d: \"M0 0 C 0 0, 0 0, 0 0\"\n    };\n\n    const lastTrip = this.trips[this.trips.length - 1];\n\n    if (lastTrip) {\n      // Check if current trip continues from previous\n      newTrip.continued = lastTrip.end === newTrip.start;\n      \n      // Check if consecutive same route\n      newTrip.sameRoute = lastTrip.start === newTrip.start && \n                          lastTrip.end === newTrip.end;\n\n      if (newTrip.sameRoute) {\n        lastTrip.level = 2;\n        // newTrip.d = 'M0 0 C 50 15, 100 -80, 150 -55'\n        lastTrip.d = 'M0 0 C 0 0, 0 0, 150 0'\n        newTrip.level = 2;\n        newTrip.color = '#ffb74d';\n      } else if (newTrip.continued) {\n        newTrip.color = '#ffb74d';\n        lastTrip.d = \"M0 0 C 0 0, 0 0, 150 0\"\n      } else {\n        newTrip.color = '#2196f3';\n        newTrip.arrow = false;\n      }\n    }\n\n    this.trips.push(newTrip);\n    this.startPoint = '';\n    this.endPoint = '';\n\n    console.log(this.trips)\n  }\n}","<div class=\"form-container\">\r\n    <input [(ngModel)]=\"startPoint\" placeholder=\"Start Point\">\r\n    <input [(ngModel)]=\"endPoint\" placeholder=\"End Point\">\r\n    <button (click)=\"addTrip()\">Add Trip</button>\r\n  </div>\r\n  \r\n  <div class=\"timeline\">\r\n    <svg width=\"100%\" height=\"200\">\r\n      <defs>\r\n        <marker id=\"arrow\" markerWidth=\"10\" markerHeight=\"7\" refX=\"10\" refY=\"3.5\" orient=\"auto\">\r\n          <polygon points=\"0 0, 10 3.5, 0 7\" fill=\"#2196f3\" />\r\n        </marker>\r\n      </defs>\r\n  \r\n      <ng-container *ngFor=\"let trip of trips; let i = index\">\r\n        <g [attr.transform]=\"'translate(' + (50 + i * 150) + ',' + (trip.level === 2 ? 60 : 120) + ')'\">\r\n          <ng-container *ngIf=\"trips.length > 1\">\r\n            <path\r\n              [attr.d]=\"trips[i]?.d\"\r\n              stroke=\"#ffb74d\" stroke-width=\"2\" marker-end=\"\" />\r\n          </ng-container>\r\n          <circle r=\"5\" [attr.fill]=\"trip.color\"></circle>\r\n          <text x=\"-15\" y=\"20\" font-size=\"12\">{{ trip.shortStart }} - {{ trip.shortEnd }}</text>\r\n  \r\n          <!-- Connections -->\r\n          <!-- <ng-container *ngIf=\"trips.length > 1\">\r\n            <ng-container *ngIf=\"trips[i + 1] as nextTrip\">\r\n              <circle r=\"5\" [attr.fill]=\"trip.color\"></circle>\r\n              <text x=\"-15\" y=\"20\" font-size=\"12\">{{ trip.shortStart }} - {{ trip.shortEnd }}</text>\r\n              <path *ngIf=\"nextTrip.continued\"\r\n                [attr.d]=\"trips[i].d\"\r\n                stroke=\"#ffb74d\" stroke-width=\"2\" marker-end=\"\" />\r\n  \r\n              <path *ngIf=\"nextTrip.sameRoute\"\r\n                [attr.d]=\"nextTrip.d\"\r\n                stroke=\"#a0a0a0\" fill=\"transparent\" stroke-width=\"2\" />\r\n  \r\n              <path *ngIf=\"!nextTrip.continued && !nextTrip.sameRoute\"\r\n                d=\"M0 0 C 0 0, 0 0, 150 0\"\r\n                stroke=\"#2196f3\" stroke-width=\"2\" marker-end=\"url(#arrow)\" />\r\n              <circle r=\"5\" [attr.fill]=\"trip.color\"></circle>\r\n              <text x=\"-15\" y=\"20\" font-size=\"12\">{{ nextTrip.shortStart }} - {{ nextTrip.shortEnd }}</text>\r\n            </ng-container>\r\n          </ng-container> -->\r\n        </g>\r\n      </ng-container>\r\n    </svg>\r\n  </div>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}