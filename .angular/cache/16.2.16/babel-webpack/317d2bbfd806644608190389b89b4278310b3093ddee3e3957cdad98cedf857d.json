{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let DashboardComponent = class DashboardComponent {\n  constructor() {\n    this.startPoint = '';\n    this.endPoint = '';\n    this.trips = [];\n  }\n  addTrip() {\n    const shortStart = this.startPoint.trim().substring(0, 3).toUpperCase();\n    const shortEnd = this.endPoint.trim().substring(0, 3).toUpperCase();\n    const newTrip = {\n      start: this.startPoint.trim(),\n      end: this.endPoint.trim(),\n      level: 1,\n      continued: false,\n      sameRoute: false,\n      arrow: false,\n      shortStart,\n      shortEnd,\n      color: '#5c6bc0'\n    };\n    const lastTrip = this.trips[this.trips.length - 1];\n    if (lastTrip) {\n      // Check if current trip continues from previous\n      newTrip.continued = lastTrip.end === newTrip.start;\n      // Check if consecutive same route\n      newTrip.sameRoute = lastTrip.start === newTrip.start && lastTrip.end === newTrip.end;\n      if (newTrip.sameRoute) {\n        lastTrip.level = 2;\n        newTrip.level = 2;\n        newTrip.color = '#a0a0a0';\n      } else if (newTrip.continued) {\n        newTrip.color = '#ffb74d';\n      } else {\n        newTrip.color = '#2196f3';\n        newTrip.arrow = false;\n      }\n    }\n    this.trips.push(newTrip);\n    this.startPoint = '';\n    this.endPoint = '';\n  }\n};\nDashboardComponent = __decorate([Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})], DashboardComponent);","map":{"version":3,"names":["Component","DashboardComponent","constructor","startPoint","endPoint","trips","addTrip","shortStart","trim","substring","toUpperCase","shortEnd","newTrip","start","end","level","continued","sameRoute","arrow","color","lastTrip","length","push","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Sharbanee Mohanty\\Downloads\\coforge4\\projectnew\\src\\app\\dashboard\\dashboard.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\ninterface TripSegment {\n  start: string;\n  end: string;\n  level: number;\n  continued: boolean;\n  sameRoute: boolean;\n  arrow: boolean;\n  shortStart: string;\n  shortEnd: string;\n  color: string;\n}\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent {\n  startPoint = '';\n  endPoint = '';\n  trips: TripSegment[] = [];\n\n  addTrip() {\n    const shortStart = this.startPoint.trim().substring(0, 3).toUpperCase();\n    const shortEnd = this.endPoint.trim().substring(0, 3).toUpperCase();\n\n    const newTrip: TripSegment = {\n      start: this.startPoint.trim(),\n      end: this.endPoint.trim(),\n      level: 1,\n      continued: false,\n      sameRoute: false,\n      arrow: false,\n      shortStart,\n      shortEnd,\n      color: '#5c6bc0',\n    };\n\n    const lastTrip = this.trips[this.trips.length - 1];\n\n    if (lastTrip) {\n      // Check if current trip continues from previous\n      newTrip.continued = lastTrip.end === newTrip.start;\n      \n      // Check if consecutive same route\n      newTrip.sameRoute = lastTrip.start === newTrip.start && \n                          lastTrip.end === newTrip.end;\n\n      if (newTrip.sameRoute) {\n        lastTrip.level = 2;\n        newTrip.level = 2;\n        newTrip.color = '#a0a0a0';\n      } else if (newTrip.continued) {\n        newTrip.color = '#ffb74d';\n      } else {\n        newTrip.color = '#2196f3';\n        newTrip.arrow = false;\n      }\n    }\n\n    this.trips.push(newTrip);\n    this.startPoint = '';\n    this.endPoint = '';\n  }\n}"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAmBlC,WAAMC,kBAAkB,GAAxB,MAAMA,kBAAkB;EAAxBC,YAAA;IACL,KAAAC,UAAU,GAAG,EAAE;IACf,KAAAC,QAAQ,GAAG,EAAE;IACb,KAAAC,KAAK,GAAkB,EAAE;EA4C3B;EA1CEC,OAAOA,CAAA;IACL,MAAMC,UAAU,GAAG,IAAI,CAACJ,UAAU,CAACK,IAAI,EAAE,CAACC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAACC,WAAW,EAAE;IACvE,MAAMC,QAAQ,GAAG,IAAI,CAACP,QAAQ,CAACI,IAAI,EAAE,CAACC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAACC,WAAW,EAAE;IAEnE,MAAME,OAAO,GAAgB;MAC3BC,KAAK,EAAE,IAAI,CAACV,UAAU,CAACK,IAAI,EAAE;MAC7BM,GAAG,EAAE,IAAI,CAACV,QAAQ,CAACI,IAAI,EAAE;MACzBO,KAAK,EAAE,CAAC;MACRC,SAAS,EAAE,KAAK;MAChBC,SAAS,EAAE,KAAK;MAChBC,KAAK,EAAE,KAAK;MACZX,UAAU;MACVI,QAAQ;MACRQ,KAAK,EAAE;KACR;IAED,MAAMC,QAAQ,GAAG,IAAI,CAACf,KAAK,CAAC,IAAI,CAACA,KAAK,CAACgB,MAAM,GAAG,CAAC,CAAC;IAElD,IAAID,QAAQ,EAAE;MACZ;MACAR,OAAO,CAACI,SAAS,GAAGI,QAAQ,CAACN,GAAG,KAAKF,OAAO,CAACC,KAAK;MAElD;MACAD,OAAO,CAACK,SAAS,GAAGG,QAAQ,CAACP,KAAK,KAAKD,OAAO,CAACC,KAAK,IAChCO,QAAQ,CAACN,GAAG,KAAKF,OAAO,CAACE,GAAG;MAEhD,IAAIF,OAAO,CAACK,SAAS,EAAE;QACrBG,QAAQ,CAACL,KAAK,GAAG,CAAC;QAClBH,OAAO,CAACG,KAAK,GAAG,CAAC;QACjBH,OAAO,CAACO,KAAK,GAAG,SAAS;OAC1B,MAAM,IAAIP,OAAO,CAACI,SAAS,EAAE;QAC5BJ,OAAO,CAACO,KAAK,GAAG,SAAS;OAC1B,MAAM;QACLP,OAAO,CAACO,KAAK,GAAG,SAAS;QACzBP,OAAO,CAACM,KAAK,GAAG,KAAK;;;IAIzB,IAAI,CAACb,KAAK,CAACiB,IAAI,CAACV,OAAO,CAAC;IACxB,IAAI,CAACT,UAAU,GAAG,EAAE;IACpB,IAAI,CAACC,QAAQ,GAAG,EAAE;EACpB;CACD;AA/CYH,kBAAkB,GAAAsB,UAAA,EAL9BvB,SAAS,CAAC;EACTwB,QAAQ,EAAE,eAAe;EACzBC,WAAW,EAAE,4BAA4B;EACzCC,SAAS,EAAE,CAAC,2BAA2B;CACxC,CAAC,C,EACWzB,kBAAkB,CA+C9B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}