{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"keycloak-angular\";\nexport class AppComponent {\n  constructor(keycloakService) {\n    this.keycloakService = keycloakService;\n    this.title = 'projectnew';\n  }\n  login() {\n    return () => keycloakService.init({\n      config: {\n        url: 'https://oridess.mmthinkbiz.com:8443',\n        realm: 'amazon-oidc-app',\n        clientId: 'localhost-app'\n      },\n      initOptions: {\n        onLoad: 'login-required',\n        checkLoginIframe: false\n      }\n    }).then(() => {\n      console.log('Keycloak initialized successfully');\n    }).catch(error => {\n      console.error('Keycloak initialization failed', error);\n    });\n  }\n  logout() {\n    this.keycloakService.logout();\n  }\n  getUsername() {\n    return this.keycloakService.getUsername();\n  }\n  static {\n    this.ɵfac = function AppComponent_Factory(t) {\n      return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.KeycloakService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AppComponent,\n      selectors: [[\"app-root\"]],\n      decls: 6,\n      vars: 1,\n      consts: [[3, \"click\"]],\n      template: function AppComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"button\", 0);\n          i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_0_listener() {\n            return ctx.login();\n          });\n          i0.ɵɵtext(1, \"Login\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"button\", 0);\n          i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_2_listener() {\n            return ctx.logout();\n          });\n          i0.ɵɵtext(3, \"Logout\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"p\");\n          i0.ɵɵtext(5);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(5);\n          i0.ɵɵtextInterpolate1(\"Logged in user: \", ctx.getUsername(), \"\");\n        }\n      },\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["AppComponent","constructor","keycloakService","title","login","init","config","url","realm","clientId","initOptions","onLoad","checkLoginIframe","then","console","log","catch","error","logout","getUsername","i0","ɵɵdirectiveInject","i1","KeycloakService","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","AppComponent_Template_button_click_0_listener","ɵɵtext","ɵɵelementEnd","AppComponent_Template_button_click_2_listener","ɵɵadvance","ɵɵtextInterpolate1"],"sources":["E:\\newProjectAngular\\newProjectAngular\\projectnew\\src\\app\\app.component.ts","E:\\newProjectAngular\\newProjectAngular\\projectnew\\src\\app\\app.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { KeycloakService } from 'keycloak-angular';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'projectnew';\n  constructor(private keycloakService: KeycloakService) {}\n\n  login() {\n return () =>\n  keycloakService.init({\n      config: {\n        url: 'https://oridess.mmthinkbiz.com:8443',\n        realm: 'amazon-oidc-app', \n        clientId: 'localhost-app',   \n      },\n      initOptions: {\n        onLoad: 'login-required',\n        checkLoginIframe: false,\n      },\n    }).then(() => {\n      console.log('Keycloak initialized successfully');\n    }).catch((error) => {\n      console.error('Keycloak initialization failed', error);\n    });  }\n\n  logout() {\n    this.keycloakService.logout();\n  }\n\n  getUsername(): string {\n    return this.keycloakService.getUsername();\n  }\n}\n","<button (click)=\"login()\">Login</button>\n<button (click)=\"logout()\">Logout</button>\n<p>Logged in user: {{ getUsername() }}</p>"],"mappings":";;AAQA,OAAM,MAAOA,YAAY;EAEvBC,YAAoBC,eAAgC;IAAhC,KAAAA,eAAe,GAAfA,eAAe;IADnC,KAAAC,KAAK,GAAG,YAAY;EACmC;EAEvDC,KAAKA,CAAA;IACN,OAAO,MACNF,eAAe,CAACG,IAAI,CAAC;MACjBC,MAAM,EAAE;QACNC,GAAG,EAAE,qCAAqC;QAC1CC,KAAK,EAAE,iBAAiB;QACxBC,QAAQ,EAAE;OACX;MACDC,WAAW,EAAE;QACXC,MAAM,EAAE,gBAAgB;QACxBC,gBAAgB,EAAE;;KAErB,CAAC,CAACC,IAAI,CAAC,MAAK;MACXC,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;IAClD,CAAC,CAAC,CAACC,KAAK,CAAEC,KAAK,IAAI;MACjBH,OAAO,CAACG,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACxD,CAAC,CAAC;EAAG;EAEPC,MAAMA,CAAA;IACJ,IAAI,CAAChB,eAAe,CAACgB,MAAM,EAAE;EAC/B;EAEAC,WAAWA,CAAA;IACT,OAAO,IAAI,CAACjB,eAAe,CAACiB,WAAW,EAAE;EAC3C;;;uBA5BWnB,YAAY,EAAAoB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,eAAA;IAAA;EAAA;;;YAAZvB,YAAY;MAAAwB,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,sBAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCRzBV,EAAA,CAAAY,cAAA,gBAA0B;UAAlBZ,EAAA,CAAAa,UAAA,mBAAAC,8CAAA;YAAA,OAASH,GAAA,CAAA3B,KAAA,EAAO;UAAA,EAAC;UAACgB,EAAA,CAAAe,MAAA,YAAK;UAAAf,EAAA,CAAAgB,YAAA,EAAS;UACxChB,EAAA,CAAAY,cAAA,gBAA2B;UAAnBZ,EAAA,CAAAa,UAAA,mBAAAI,8CAAA;YAAA,OAASN,GAAA,CAAAb,MAAA,EAAQ;UAAA,EAAC;UAACE,EAAA,CAAAe,MAAA,aAAM;UAAAf,EAAA,CAAAgB,YAAA,EAAS;UAC1ChB,EAAA,CAAAY,cAAA,QAAG;UAAAZ,EAAA,CAAAe,MAAA,GAAmC;UAAAf,EAAA,CAAAgB,YAAA,EAAI;;;UAAvChB,EAAA,CAAAkB,SAAA,GAAmC;UAAnClB,EAAA,CAAAmB,kBAAA,qBAAAR,GAAA,CAAAZ,WAAA,OAAmC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}